{"version":3,"sources":["Components/editor.jsx","Components/bottombar.jsx","index.js"],"names":["Editor","react_default","a","createElement","lib_default","name","mode","width","value","this","props","textVal","onChange","theme","editorProps","$blockScrolling","Component","Bar","_ref","text","onClickFunction","id","onClick","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","current","issueText","filenames","filters","currentFilter","runFilter","bind","assertThisInitialized","onDrop","route","fetch","data","console","log","setState","files","FormData","append","method","body","response","reader","FileReader","onload","event","_this2","prev","concat","toConsumableArray","target","result","readAsText","_this3","className","style","float","margin","es","getRootProps","getInputProps","length","map","editor","newText","bottombar","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3f15fecd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport AceEditor from 'react-ace';\nimport 'brace/mode/python';\nimport 'brace/theme/monokai';\n\nclass Editor extends Component {\n  render() {\n    return (\n      <AceEditor\n        name=\"editor\"\n        mode=\"python\"\n        width=\"100%\"\n        value={this.props.textVal}\n        onChange={this.props.onChange}\n        theme=\"monokai\"\n        editorProps={{\n          $blockScrolling: true\n        }}\n      />\n    );\n  }\n}\n\nexport default Editor;\n","import React from \"react\";\n\nconst Bar = ({ text, onClickFunction }) =>\n  <div id=\"bar\">\n    Results\n    <pre>\n      {text}\n    </pre>\n    <button\n      id='runFilterButton'\n      onClick={onClickFunction}\n    >\n      Run Filter\n    </button>\n  </div>\n\nexport default Bar;\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactDropzone from \"react-dropzone\";\nimport \"./index.css\";\n\nimport Editor from \"./Components/editor\";\nimport BottomBar from \"./Components/bottombar\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Current file name\n      current: \"\",\n      // Text for bottom bar\n      issueText: \"\",\n      // Sidebar items\n      filenames: [],\n      // Content of the editor\n      text: \"\",\n\n      filters: [\"checkLineCount\", \"checkFileSize\", \"checkContainsPassword\", \"runPythonLint\", \"checkLineLength\"],\n\n      currentFilter: \"checkLineCount\"\n    };\n    this.runFilter = this.runFilter.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n  };\n\n  async runFilter() {\n    const route = `/runFileFilters/${this.state.current}`;\n    const data = await fetch(route);\n    const text = await data.text();\n    console.log(text);\n    this.setState({\n      issueText: text,\n    });\n  }\n\n  async onDrop(files) {\n    let route = '/uploadFiles';\n    const data = new FormData();\n    data.append('files', files[0]);\n\n    const response = await fetch(route, {\n      method: \"POST\",\n      body: data,\n    });\n    console.log(response);\n\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      console.log(this.state.text);\n      this.setState(prev => ({\n        filenames: [...prev.filenames, files[0].name],\n        current: files[0].name,\n        text: event.target.result\n      }));\n      console.log(this.state.text);\n    };\n\n    reader.readAsText(files[0]);\n  }\n\n  render() {\n    const { current } = this.state;\n    return (\n      <div className='wrapper'>\n        <header>\n          <strong>SEE</strong>\n          <em>Simplified Execution Environment</em>\n          {current &&\n            <h2 style={{ float: 'right', margin: 0 }}>\n              {current}\n            </h2>\n          }\n        </header>\n        <section id='sidebar'>\n          <ReactDropzone onDrop={this.onDrop}>\n            {({ getRootProps, getInputProps }) => (\n              <section>\n                <div {...getRootProps()}>\n                  <input {...getInputProps()} />\n                  <p>Upload your files here</p>\n                  {this.state.filenames.length > 0\n                    ? <ul>{this.state.filenames.map(name =>\n                      <li>${name}</li>\n                    )}</ul>\n                    : \"No files\"\n                  }\n                </div>\n              </section>\n            )}\n          </ReactDropzone>\n        </section>\n        <main>\n          <Editor\n            onChange={(newText) => this.setState({ text: newText || \"\" })}\n            textVal={this.state.text}\n          />\n          <BottomBar\n            onClickFunction={this.runFilter}\n            text={this.state.issueText}\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}