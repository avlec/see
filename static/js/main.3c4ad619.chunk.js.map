{"version":3,"sources":["Components/editor.jsx","Components/bottombar.jsx","index.js"],"names":["Editor","react_default","a","createElement","lib_default","name","mode","width","value","this","props","textVal","onChange","theme","editorProps","$blockScrolling","Component","Bar","_ref","text","onClickFunction","id","onClick","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","current","issueText","filenames","filters","currentFilter","runFilter","bind","assertThisInitialized","onDrop","route","fetch","data","console","log","setState","files","FormData","append","method","body","response","reader","FileReader","onload","event","_this2","prev","concat","toConsumableArray","target","result","readAsText","_this3","className","style","float","margin","es","getRootProps","getInputProps","length","map","editor","newText","bottombar","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3c4ad619.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport AceEditor from 'react-ace';\r\nimport 'brace/mode/python';\r\nimport 'brace/theme/monokai';\r\n\r\nclass Editor extends Component {\r\n  render() {\r\n    return (\r\n      <AceEditor\r\n        name=\"editor\"\r\n        mode=\"python\"\r\n        width=\"100%\"\r\n        value={this.props.textVal}\r\n        onChange={this.props.onChange}\r\n        theme=\"monokai\"\r\n        editorProps={{\r\n          $blockScrolling: true\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Editor;\r\n","import React from \"react\";\r\n\r\nconst Bar = ({ text, onClickFunction }) =>\r\n  <div id=\"bar\">\r\n    Results\r\n    <pre>\r\n      {text}\r\n    </pre>\r\n    <button\r\n      id='runFilterButton'\r\n      onClick={onClickFunction}\r\n    >\r\n      Run Filter\r\n    </button>\r\n  </div>\r\n\r\nexport default Bar;\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport ReactDropzone from \"react-dropzone\";\r\nimport \"./index.css\";\r\n\r\nimport Editor from \"./Components/editor\";\r\nimport BottomBar from \"./Components/bottombar\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // Current file name\r\n      current: \"\",\r\n      // Text for bottom bar\r\n      issueText: \"\",\r\n      // Sidebar items\r\n      filenames: [],\r\n      // Content of the editor\r\n      text: \"\",\r\n\r\n      filters: [\"checkLineCount\", \"checkFileSize\", \"checkContainsPassword\", \"runPythonLint\", \"checkLineLength\"],\r\n\r\n      currentFilter: \"checkLineCount\"\r\n    };\r\n    this.runFilter = this.runFilter.bind(this);\r\n    this.onDrop = this.onDrop.bind(this);\r\n  };\r\n\r\n  async runFilter() {\r\n    const route = `/runFileFilters/${this.state.current}`;\r\n    const data = await fetch(route);\r\n    const text = await data.text();\r\n    console.log(text);\r\n    this.setState({\r\n      issueText: text,\r\n    });\r\n  }\r\n\r\n  async onDrop(files) {\r\n    let route = '/uploadFiles';\r\n    const data = new FormData();\r\n    data.append('files', files[0]);\r\n\r\n    const response = await fetch(route, {\r\n      method: \"POST\",\r\n      body: data,\r\n    });\r\n    console.log(response);\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = (event) => {\r\n      console.log(this.state.text);\r\n      this.setState(prev => ({\r\n        filenames: [...prev.filenames, files[0].name],\r\n        current: files[0].name,\r\n        text: event.target.result\r\n      }));\r\n      console.log(this.state.text);\r\n    };\r\n\r\n    reader.readAsText(files[0]);\r\n  }\r\n\r\n  render() {\r\n    const { current } = this.state;\r\n    return (\r\n      <div className='wrapper'>\r\n        <header>\r\n          <strong>SEE</strong>\r\n          <em>Simplified Execution Environment</em>\r\n          {current &&\r\n            <h2 style={{ float: 'right', margin: 0 }}>\r\n              {current}\r\n            </h2>\r\n          }\r\n        </header>\r\n        <section id='sidebar'>\r\n          <ReactDropzone onDrop={this.onDrop}>\r\n            {({ getRootProps, getInputProps }) => (\r\n              <section>\r\n                <div {...getRootProps()}>\r\n                  <input {...getInputProps()} />\r\n                  <p>Upload your files here</p>\r\n                  {this.state.filenames.length > 0\r\n                    ? <ul>{this.state.filenames.map(name =>\r\n                      <li>${name}</li>\r\n                    )}</ul>\r\n                    : \"No files\"\r\n                  }\r\n                </div>\r\n              </section>\r\n            )}\r\n          </ReactDropzone>\r\n        </section>\r\n        <main>\r\n          <Editor\r\n            onChange={(newText) => this.setState({ text: newText || \"\" })}\r\n            textVal={this.state.text}\r\n          />\r\n          <BottomBar\r\n            onClickFunction={this.runFilter}\r\n            text={this.state.issueText}\r\n          />\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}